import {
    AppMenuBar,
    AppMenu,
    AppMenuItem,
    AppMenuSeparator,
} from "menubar.slint";
import { Logic } from "logic.slint";
import { State } from "state.slint";
import { Image } from "types.slint";
import { ThumbnailPanel, ThumbnailItem } from "thumbnail.slint";
import { Panels } from "panel.slint";
import { Canvas, CanvasControl } from "canvas.slint";

// re-export for the native code
// refer: https://github.com/slint-ui/slint/blob/24d37751e8245af46722e8e8aa9fb74bf6639489/examples/printerdemo/ui/printerdemo.slint#L11
export { Logic, State }

export component App inherits Window {
    in-out property <int> scale: 100;
    in-out property <[Image]> images;

    function load-image(img: Image) {
        State.image = img;
        root.scale = Math.min(
                100,
                Math.floor(100 / 1px * canvas.width / img.source.width),
                Math.floor(100 / 1px * canvas.height / img.source.height));
    }

    max-width: 3840px;
    max-height: 2160px;
    preferred-width: 1024px;
    preferred-height: 768px;
    title: "Koharu";
    icon: @image-url("assets/Koharu_Halo.webp");

    VerticalLayout {
        AppMenuBar {
            AppMenu {
                title: "File";

                AppMenuItem {
                    title: "Open File...";
                    clicked => {
                        images = Logic.open-file();

                        if (images.length > 0) {
                            load-image(images[0]);
                        }
                    }
                }
            }

            AppMenu {
                title: "Help";

                AppMenuItem {
                    title: "Discord";
                    clicked => {
                        Logic.open-external("https://discord.gg/mHvHkxGnUY");
                    }
                }

                AppMenuItem {
                    title: "GitHub";
                    clicked => {
                        Logic.open-external("https://github.com/mayocream/koharu");
                    }
                }
            }
        }

        HorizontalLayout {
            ThumbnailPanel {
                for image in root.images: ThumbnailItem {
                    title: image.name;
                    source: image.source;
                    clicked => {
                        load-image(image);
                    }
                }
            }

            VerticalLayout {
                canvas := Canvas {
                    scale: root.scale;
                }

                CanvasControl {
                    scale <=> root.scale;
                }
            }

            Panels { }
        }
    }
}
